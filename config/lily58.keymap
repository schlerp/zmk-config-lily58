/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#define MACRO(name, keys)                  \
    name: name##_macro {                   \
        label = #name;                     \
        compatible = "zmk,behavior-macro"; \
        wait-ms = <1>;                     \
        tap-ms = <1>;                      \
        #binding-cells = <0>;              \
        bindings = <keys>;                 \
    };

/ {
    macros {
        MACRO(move_desktop_left, <&kp LC(

        LEFT = )>);

        MACRO(move_desktop_right, <&kp LC(

        RIGHT = )>);

        MACRO(open_1password, <&kp LG(LS(

        SPACE = ))>);

        dt_left: dt_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LEFT)>;
            label = "DT_LEFT";
        };

        dt_right: dt_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RIGHT)>;
            label = "DT_RIGHT";
        };

        open_1p: open_1p {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(SPACE))>;
            label = "OPEN_1P";
        };

        show_windows: show_windows {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(UP_ARROW)>;
            label = "SHOW_WINDOWS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                           &kp N6     &kp N7             &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&kp TAB    &kp Q   &kp W   &kp E     &kp R     &kp T                            &kp Y      &kp U              &kp I      &kp O    &kp P     &kp MINUS
&kp LCTRL  &kp A   &kp S   &kp D     &kp F     &kp G                            &kp H      &kp J              &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C     &kp V     &kp B      &kp LBKT    &kp RBKT  &kp N      &kp M              &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                           &kp LALT  &kp LGUI  &kp ENTER  &mo 1       &mo 2     &kp SPACE  &kp RIGHT_CONTROL  &kp RGUI
            >;

            label = "BASE";
        };

        symbol_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4                    &trans        &trans            &trans             &trans          &trans           &trans
&kp F1      &kp F2            &kp F3             &kp F4             &kp F5        &kp F6                          &kp GRAVE     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp F12
&kp GRAVE   &kp EXCL          &kp AT             &kp HASH           &kp DOLLAR    &kp PRCNT                       &kp KP_SLASH  &kp KP_SUBTRACT   &kp UNDERSCORE     &kp LPAR        &kp RPAR         &kp TILDE
&trans      &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans        &trans        &trans    &trans  &kp TILDE     &kp KP_EQUAL      &kp KP_PLUS        &kp PIPE        &kp QUESTION     &trans
                                                 &trans             &trans        &trans        &trans    &trans  &trans        &trans            &trans
            >;

            label = "SYMBOL";
        };

        funcnav_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &trans  &trans  &trans   &trans   &trans                     &trans       &trans     &trans     &trans    &trans     &trans
&kp GRAVE  &kp N1  &kp N2  &kp N3   &kp N4   &kp N5                     &kp N6       &kp N7     &kp N8     &kp N9    &kp N0     &trans
&kp F1     &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                     &trans       &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT  &trans
&kp F7     &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &kp KP_PLUS  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT   &kp BSLH
                           &trans   &trans   &trans   &trans    &trans  &trans       &trans     &trans
            >;

            label = "FUNCNAV";
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans                         &trans  &trans         &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans                         &trans  &trans         &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &open_1p  &trans                         &trans  &show_windows  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &dt_left    &dt_right  &trans  &trans         &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans      &trans     &trans  &trans         &trans
            >;

            label = "MACRO";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        to_macro {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
